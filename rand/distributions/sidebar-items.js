initSidebarItems({"fn":[["ascii_word_char","Sample a `char`, uniformly distributed over ASCII letters and numbers: a-z, A-Z and 0-9."],["codepoint","Sample a `char`, uniformly distributed over all Unicode scalar values, i.e. all code points in the range `0...0x10_FFFF`, except for the range `0xD800...0xDFFF` (the surrogate code points).  This includes unassigned/reserved code points."],["uniform","Sample values uniformly over the whole range supported by the type"],["weighted_bool","Return a bool with a 1 in n chance of being true"]],"mod":[["exponential","The exponential distribution."],["gamma","The Gamma and derived distributions."],["normal","The normal and derived distributions."],["range","Generating numbers between two others."]],"struct":[["Closed01","Sample values uniformly over the closed range [0, 1]"],["Default","A generic random value distribution. Generates values using what appears to be \"the best\" distribution for each type, but ultimately the choice is arbitrary."],["Open01","Sample values uniformly over the open range (0, 1)"],["Uniform","Sample values uniformly over the whole range supported by the type"],["Uniform01","Sample values uniformly over the half-open range [0, 1)"],["Weighted","A value with a particular weight for use with `WeightedChoice`."],["WeightedChoice","A distribution that selects from a finite collection of weighted items."]],"trait":[["Distribution","Types (distributions) that can be used to create a random instance of `T`."],["Rand","Generic trait for sampling random values from some distribution"]]});